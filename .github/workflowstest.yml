name: Deploy Production
on:
  workflow_dispatch:
    inputs:
      version:
        description: Bump Version
        default: v1.0.0
        required: true
jobs:
  deploy:
    name: Deploy Production
    runs-on: solutelabs-runner
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: act10ns/slack@v1
        with:
          status: starting
        if: always()

      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm ci

      - name: serverless deploy
        run: sls deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION_ENV: ${{secrets.PROD_AWS_REGION}}
          AWS_ACCESS_KEY_ID_ENV: ${{secrets.PROD_AWS_ACCESS_KEY_ID}}
          AWS_SECRET_KEY_ENV: ${{secrets.PROD_AWS_SECRET_ACCESS_KEY}}
          ENVIRONMENT: ${{secrets.PROD_ENVIRONMENT}}
          SANITY_GROQ_URL: ${{ secrets.PROD_SANITY_GROQ_URL }}
          SANITY_MUTATION_URL: ${{ secrets.PROD_SANITY_MUTATION_URL }}
          SANITY_ACCESS_TOKEN: ${{ secrets.PROD_SANITY_ACCESS_TOKEN }}
          API_GW_REST_API_ID: ${{secrets.PROD_API_GW_REST_API_ID}}
          API_GW_REST_API_ROOT_RESOURCE_ID: ${{secrets.PROD_API_GW_REST_API_ROOT_RESOURCE_ID}}
          SUBNET: ${{secrets.PROD_SUBNET}}
          SECURITY_GROUP: ${{secrets.PROD_SECURITY_GROUP}}
          AWS_ROLE: ${{secrets.PROD_AWS_ROLE}}

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()
